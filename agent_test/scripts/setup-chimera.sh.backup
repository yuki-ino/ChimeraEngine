#!/bin/bash

# 🦁 Chimera Engine - Multi-Agent Development Environment
# QA Team Specialization: Functional Testing + Quality Management

set -e

# 色付きログ関数
log_info() {
    echo -e "\033[1;32m[INFO]\033[0m $1"
}

log_success() {
    echo -e "\033[1;34m[SUCCESS]\033[0m $1"
}

echo "🦁 Chimera Engine v0.0.1 - Multi-Agent Development Environment Setup"
echo "====================================================================="
echo ""

# STEP 1: 既存セッションクリーンアップ
log_info "🧹 既存セッションクリーンアップ開始..."

tmux kill-session -t chimera-workspace 2>/dev/null && log_info "chimera-workspaceセッション削除完了" || log_info "chimera-workspaceセッションは存在しませんでした"
tmux kill-session -t pmproject 2>/dev/null && log_info "pmprojectセッション削除完了" || log_info "pmprojectセッションは存在しませんでした"
tmux kill-session -t deveng 2>/dev/null && log_info "devengセッション削除完了" || log_info "devengセッションは存在しませんでした"
tmux kill-session -t devqa 2>/dev/null && log_info "devqaセッション削除完了" || log_info "devqaセッションは存在しませんでした"

# Chimera専用作業ディレクトリの準備（プロジェクトフォルダを汚さない）
CHIMERA_WORKSPACE_DIR="${TMPDIR:-/tmp}/chimera-workspace-$$"
mkdir -p "$CHIMERA_WORKSPACE_DIR/status" "$CHIMERA_WORKSPACE_DIR/logs"
log_info "Chimera作業ディレクトリ: $CHIMERA_WORKSPACE_DIR"

# 既存のステータスファイルクリア
rm -f "$CHIMERA_WORKSPACE_DIR/status"/*.txt 2>/dev/null && log_info "既存のステータスファイルをクリア" || log_info "ステータスファイルは存在しませんでした"

log_success "✅ クリーンアップ完了"
echo ""

# STEP 2: 統合セッション作成（1ウィンドウ6ペイン構成）
log_info "🏗️ Chimera統合ワークスペース作成開始..."

# メインセッション作成
log_info "メインセッション 'chimera-workspace' 作成中..."
tmux new-session -d -s chimera-workspace -n "chimera-dev"

# マウス操作を有効化
log_info "マウス操作を有効化中..."
tmux set-option -g mouse on

# ペイン分割: 上1/3 - PM
log_info "ペイン分割中..."
tmux split-window -v -t "chimera-workspace:0" -p 66  # 上1/3をPMに

# 中1/3 - 開発者（残りの上半分）
tmux split-window -v -t "chimera-workspace:0.1" -p 50  # 残り2/3の上半分を開発者に

# 下1/3 - QA（3つに分割）
tmux split-window -h -t "chimera-workspace:0.2" -p 66  # QA1
tmux split-window -h -t "chimera-workspace:0.3" -p 50  # QA2, QA3

# ペインタイトル設定
tmux select-pane -t "chimera-workspace:0.0" -T "PM"
tmux select-pane -t "chimera-workspace:0.1" -T "Coder"  
tmux select-pane -t "chimera-workspace:0.2" -T "QA-Functional"
tmux select-pane -t "chimera-workspace:0.3" -T "QA-Lead"
tmux select-pane -t "chimera-workspace:0.4" -T "Monitor"

log_info "各ペインの設定中..."

# ペイン0: PM (上1/3)
tmux send-keys -t "chimera-workspace:0.0" "cd $(pwd)" C-m
tmux send-keys -t "chimera-workspace:0.0" "export PS1='(\[\033[1;31m\]PM\[\033[0m\]) \[\033[1;32m\]\w\[\033[0m\]\$ '" C-m
tmux send-keys -t "chimera-workspace:0.0" "echo '=== 🎯 PM (Product Manager) ==='" C-m
tmux send-keys -t "chimera-workspace:0.0" "echo '企画・要件定義・プロジェクト管理'" C-m
tmux send-keys -t "chimera-workspace:0.0" "echo '🤖 Claude Code起動中...'" C-m
tmux send-keys -t "chimera-workspace:0.0" "claude --dangerously-skip-permissions" C-m

# ペイン1: Coder (中1/3)  
tmux send-keys -t "chimera-workspace:0.1" "cd $(pwd)" C-m
tmux send-keys -t "chimera-workspace:0.1" "export PS1='(\[\033[1;36m\]Coder\[\033[0m\]) \[\033[1;32m\]\w\[\033[0m\]\$ '" C-m
tmux send-keys -t "chimera-workspace:0.1" "echo '=== 👨‍💻 Coder (フルスタック開発者) ==='" C-m
tmux send-keys -t "chimera-workspace:0.1" "echo 'Frontend/Backend/Mobile 全対応'" C-m
tmux send-keys -t "chimera-workspace:0.1" "echo '🤖 Claude Code起動中...'" C-m
tmux send-keys -t "chimera-workspace:0.1" "claude --dangerously-skip-permissions" C-m

# ペイン2: QA-Functional (下1/3の左)
tmux send-keys -t "chimera-workspace:0.2" "cd $(pwd)" C-m
tmux send-keys -t "chimera-workspace:0.2" "export PS1='(\[\033[1;33m\]QA-Func\[\033[0m\]) \[\033[1;32m\]\w\[\033[0m\]\$ '" C-m
tmux send-keys -t "chimera-workspace:0.2" "echo '=== 🧪 QA-Functional ==='" C-m
tmux send-keys -t "chimera-workspace:0.2" "echo '機能テスト・バグ検出'" C-m
tmux send-keys -t "chimera-workspace:0.2" "echo '🤖 Claude Code起動中...'" C-m
tmux send-keys -t "chimera-workspace:0.2" "claude --dangerously-skip-permissions" C-m

# ペイン3: QA-Lead (下1/3の中央)
tmux send-keys -t "chimera-workspace:0.3" "cd $(pwd)" C-m
tmux send-keys -t "chimera-workspace:0.3" "export PS1='(\[\033[1;31m\]QA-Lead\[\033[0m\]) \[\033[1;32m\]\w\[\033[0m\]\$ '" C-m
tmux send-keys -t "chimera-workspace:0.3" "echo '=== 👑 QA-Lead ==='" C-m
tmux send-keys -t "chimera-workspace:0.3" "echo '品質管理・リリース判定'" C-m
tmux send-keys -t "chimera-workspace:0.3" "echo '🤖 Claude Code起動中...'" C-m
tmux send-keys -t "chimera-workspace:0.3" "claude --dangerously-skip-permissions" C-m

# ペイン4: Monitor (下1/3の右)
tmux send-keys -t "chimera-workspace:0.4" "cd $(pwd)" C-m
tmux send-keys -t "chimera-workspace:0.4" "export PS1='(\[\033[1;35m\]Monitor\[\033[0m\]) \[\033[1;32m\]\w\[\033[0m\]\$ '" C-m
tmux send-keys -t "chimera-workspace:0.4" "echo '=== 📊 Monitor ==='" C-m
tmux send-keys -t "chimera-workspace:0.4" "echo 'ステータス監視・レポート'" C-m
tmux send-keys -t "chimera-workspace:0.4" "echo '🤖 Claude Code起動中...'" C-m
tmux send-keys -t "chimera-workspace:0.4" "claude --dangerously-skip-permissions" C-m

log_success "✅ 統合ワークスペース作成完了"
echo ""

echo ""
log_info "🔍 環境確認中..."

echo ""
echo "📊 セットアップ結果:"
echo "==================="

# tmuxセッション確認
echo "📺 Tmux Sessions:"
tmux list-sessions
echo ""

# ペイン構成表示
echo "📋 統合ワークスペース構成:"
echo "  ┌─────────────────────────────────┐"
echo "  │ PM (上1/3)                      │ ← 🎯 企画・管理"  
echo "  ├─────────────────────────────────┤"
echo "  │ Coder (中1/3)                   │ ← 👨‍💻 フルスタック開発"
echo "  ├───────────┬───────────┬─────────┤"
echo "  │QA-Func    │QA-Lead    │Monitor  │ ← 🧪👑📊 品質管理"
echo "  │(下1/3左)  │(下1/3中)  │(下1/3右) │"
echo "  └───────────┴───────────┴─────────┘"

echo ""
echo "📁 ディレクトリ構成:"
echo "  $CHIMERA_WORKSPACE_DIR/status/  - ステータス管理ファイル"
echo "  $CHIMERA_WORKSPACE_DIR/logs/    - 各種ログファイル"
echo "  ※プロジェクトフォルダは汚しません"

echo ""
log_success "🎉 Chimera Engine 統合ワークスペース完成！"
echo ""
echo "📋 自動構成完了:"
echo "  ✅ 1ウィンドウ5ペイン自動分割"
echo "  ✅ 全ペインで Claude Code 起動中"
echo "  ✅ ワークスペースに自動接続"
echo ""
echo "🎯 ペイン操作:"
echo "  マウスクリック    (ペイン選択)"
echo "  Ctrl+b, ↑↓←→  (キーボードペイン移動)"
echo "  Ctrl+b, z      (ペイン最大化/復元)"
echo "  Ctrl+b, d      (セッションデタッチ)"
echo ""
echo "📤 エージェント通信:"
echo "  chimera send pm \"指示内容\""
echo "  chimera send coder \"実装内容\""
echo "  chimera send qa-functional \"テスト内容\""
echo ""

# Claude Codeの起動を待つ
log_info "Claude Code起動を待機中..."
sleep 5

# 認証画面で自動的に "2" (Accept) を送信
log_info "Claude Code認証を自動実行中..."
echo "  → 全ペインに認証コマンド (2=Accept) を送信..."
for i in {0..4}; do
    tmux send-keys -t "chimera-workspace:0.$i" "2" C-m
    echo "    ペイン $i: 認証送信完了"
done
sleep 3

# 認証が完了していない場合のため、もう一度送信
log_info "認証確認を再実行中..."
for i in {0..4}; do
    tmux send-keys -t "chimera-workspace:0.$i" "2" C-m
done
sleep 2

echo ""
log_success "🚀 統合ワークスペースに接続します..."
echo "📝 PMペイン(上部)で「あなたはPMです。指示書に従って」と入力してデモ開始"
echo "💡 認証は自動完了済み - すぐに使用できます"
echo ""

# PMペイン（ペイン0）にフォーカスを設定
tmux select-pane -t chimera-workspace:0.0

# 統合ワークスペースにアタッチ
tmux attach-session -t chimera-workspace